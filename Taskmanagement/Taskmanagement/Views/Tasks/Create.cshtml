@model Taskmanagement.Models.Task
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>Create</title>
    <style type="text/css">
        .d{
            margin-top: 20px;
            border: double;
            width: 600px;
            right: 20px;
            margin-left: 500px;
            border-color: red;
        }

        body {
            background-color: aqua;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body style="border-block-color:red">
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark">
        <div class="container">
            @Html.ActionLink("Task Management", "", "", new { area = "" }, new { @class = "navbar-brand" })
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">

                    @if (User.Identity.IsAuthenticated)
                    {
                        <li>@Html.ActionLink("Task List", "Display", "Tasks", new { area = "" }, new { @class = "nav-link" })</li>
                        <li>@Html.ActionLink("Create Task", "Create", "Tasks", new { area = "" }, new { @class = "nav-link" })</li>
                        if (User.IsInRole("Admin"))
                        {
                            <li>@Html.ActionLink("Delete Task", "Delete", "Tasks", new { area = "" }, new { @class = "nav-link" })</li>
                        }
                        <li><a>Dear - @User.Identity.Name</a></li>
                        <li style="margin-left:500px">@Html.ActionLink("Logout", "Logout", "Account")</li>
                    }
                    else
                    {
                        <li style="margin-left:600px">@Html.ActionLink("Login", "Login", "Account")</li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <h2 style="text-align:center">Create Task :</h2>
    <hr />
    <div class="d">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <table align="center">
                <tr>
                    <td>
                        @Html.ActionLink("Display Task Data", "Display", new { @class = "bg-primary text-bg-dark" })
                    </td>
                </tr>
                <tr>
                    <td>Task Title : </td>
                    <td>@Html.TextBoxFor(e => e.Title, new { @class = "btn btn-outline-success" })</td>
                    <td>@Html.ValidationMessageFor(e => e.Title, "", new { @class = "error" })</td>
                </tr>
                <tr>
                    <td>Task Description : </td>
                    <td>@Html.TextBoxFor(e => e.Description, new { @class = "btn btn-outline-success" })</td>
                    <td>@Html.ValidationMessageFor(e => e.Description, "", new { @class = "error" })</td>
                </tr>
                <tr>
                    <td>Task Due Date : </td>
                    <td>@Html.TextBoxFor(e => e.Dates, new { @class = "btn btn-outline-success" })</td>
                    <td>@Html.ValidationMessageFor(e => e.Dates, "", new { @class = "error" })</td>
                </tr>
                <tr>
                    <td>
                        <br />
                        <input type="submit" class="btn btn-primary" value="Create Task" />
                    </td>
                </tr>
                <tr>
                     <td>
                            @Html.ValidationSummary(false, "validation summery", new { @class = "error" })
                     </td>
                </tr>
            </table>
        }
    </div>
    <hr />
</body>
</html>
